#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

function msg {
	tput setab 6; tput setaf 7; echo $1; tput sgr0;
}

remote="$1"
url="$2"

branch_name="$(git symbolic-ref HEAD 2>/dev/null)"

if [ $branch_name == "refs/heads/master" ]
then
	msg "Building site before pushing to master."
	rm -rf ./docs
	npm run build
	mv ./dist ./docs
	if ! [[ -z $(git status -s) ]]; then
		git add docs/
		git commit -m "auto-build site from"$(git rev-parse HEAD)
		msg "Site had changes, so it was rebuilt. Push again."
		exit 1
	else
		msg "No changes to site after rebuild, allowing push."
	fi
else
	msg "Not on master, not building site before push."
fi

exit 0
